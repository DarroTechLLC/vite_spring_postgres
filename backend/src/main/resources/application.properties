# Application Configuration
spring.application.name=fullstack-app

# Enable .env file loading (Spring Boot 2.4+ feature)
spring.config.import=optional:file:.env[.properties]
spring.config.import=optional:file:.env

# Additional configuration for environment variable resolution
spring.config.use-legacy-processing=true

# Database Configuration (reads from .env file)
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO}
spring.jpa.show-sql=${DB_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${DB_FORMAT_SQL}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server Configuration
server.port=${PORT}
server.error.include-message=always

# Management/Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# JWT Configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

# Logging Configuration
logging.level.com.example.app=${LOG_LEVEL}
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL}
logging.level.org.springframework.web=${WEB_LOG_LEVEL}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${SQL_BINDER_LOG_LEVEL}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS}
cors.allowed-methods=${CORS_ALLOWED_METHODS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS}

# Security Configuration
security.require-ssl=${REQUIRE_SSL}
security.session-timeout=${SESSION_TIMEOUT}
