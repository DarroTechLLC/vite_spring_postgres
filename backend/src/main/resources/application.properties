# Application Configuration
spring.application.name=fullstack-app

# Database Configuration
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:appdb}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=${DB_DDL_AUTO:update}
spring.jpa.show-sql=${DB_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${DB_FORMAT_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server Configuration
server.port=${PORT:8080}
server.error.include-message=always

# Management/Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# JWT Configuration
jwt.secret=${JWT_SECRET:your-secret-key-change-this-in-production-at-least-256-bits-long}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Logging Configuration
logging.level.com.example.app=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=${SECURITY_LOG_LEVEL:INFO}
logging.level.org.springframework.web=${WEB_LOG_LEVEL:INFO}
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${SQL_BINDER_LOG_LEVEL:WARN}

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173}
cors.allowed-methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
cors.allowed-headers=${CORS_ALLOWED_HEADERS:*}
cors.allow-credentials=${CORS_ALLOW_CREDENTIALS:true}

# Security Configuration
security.require-ssl=${REQUIRE_SSL:false}
security.session-timeout=${SESSION_TIMEOUT:1800}

# Production Configuration
spring.profiles.active=${SPRING_PROFILES_ACTIVE:prod}
