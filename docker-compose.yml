services:
  postgres:
    image: postgres:17.6-alpine
    container_name: fullstack-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - fullstack-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fullstack-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    environment:
      # Only set Spring profile - all other config comes from .env via application.properties
      SPRING_PROFILES_ACTIVE: dev
    volumes:
      - ./.env:/app/.env:ro
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - fullstack-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fullstack-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
        restart: true
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - fullstack-network

volumes:
  postgres_data:

networks:
  fullstack-network:
    driver: bridge
